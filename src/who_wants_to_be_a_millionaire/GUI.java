/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package who_wants_to_be_a_millionaire;

/**
 *
 * @author blake
 */
public class GUI extends javax.swing.JFrame implements GameLogic {

    /**
     * Creates new form GUI
     */
    
    // Record the state of the game, and create handlers for console and file interaction
        GameState state = new GameState();
        FileOperations fileOps = new FileOperations();
        ConsoleIO consoleIO = new ConsoleIO();
        
        // Generate a handler for the questions
        QuestionHandler qList = new QuestionHandler(fileOps.ParseQuestionsFromFile("Questions.txt"));
        
        // Create a host to interact with the player
        Regis regis = fileOps.ParseRegisFromFile("regis.txt");
        
        // Create lifelines
        CallAFriend lifelineCallAFriend = new CallAFriend();
        AskTheAudience lifelineAskTheAudience = new AskTheAudience();
        FiftyFifty lifelineFiftyFifty = new FiftyFifty();
        
        // Holder for the next question to be asked
        Question question = new Question();
        
        String playerResponse = "";
    
    public GUI() {
        initComponents();
        
        GenerateQuestionPool();
        
        ReadIntro();
        
        GameLoop();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        answerA = new javax.swing.JButton();
        answerB = new javax.swing.JButton();
        answerC = new javax.swing.JButton();
        answerD = new javax.swing.JButton();
        questionTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        lifePhone = new javax.swing.JButton();
        life5050 = new javax.swing.JButton();
        lifeAsk = new javax.swing.JButton();
        walkAway = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        regisTextField = new javax.swing.JTextField();
        labelFinalAnswer = new javax.swing.JLabel();
        finalNo = new javax.swing.JButton();
        finalYes = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(400, 200));
        setName("GUI"); // NOI18N
        setResizable(false);

        answerA.setText("answerA");
        answerA.setActionCommand("jButton1");
        answerA.setBorder(null);
        answerA.setEnabled(false);
        answerA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerAMouseClicked(evt);
            }
        });

        answerB.setText("answerB");
        answerB.setEnabled(false);
        answerB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerBMouseClicked(evt);
            }
        });

        answerC.setText("answerC");
        answerC.setEnabled(false);
        answerC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerCMouseClicked(evt);
            }
        });

        answerD.setText("answerD");
        answerD.setEnabled(false);
        answerD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answerDMouseClicked(evt);
            }
        });

        questionTextField.setEditable(false);
        questionTextField.setText("questionTextField");

        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        jTextPane1.setText("15     $1,000,000\n14     $500,000\n13     $250,000\n12     $125,000\n11     $64,000\n10     $32,000\n  9     $16,000\n  8     $8,000\n  7     $4,000\n  6     $2,000\n  5     $1,000\n  4     $500\n  3     $300\n  2     $200\n  1     $100\n  0     $0");
        jTextPane1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextPane1);

        lifePhone.setText("lifePhone");
        lifePhone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lifePhoneMouseClicked(evt);
            }
        });

        life5050.setText("life5050");
        life5050.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                life5050MouseClicked(evt);
            }
        });

        lifeAsk.setText("lifeAsk");
        lifeAsk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lifeAskMouseClicked(evt);
            }
        });

        walkAway.setText("walkAway");
        walkAway.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                walkAwayMouseClicked(evt);
            }
        });

        jLabel1.setText("Life Lines");

        regisTextField.setEditable(false);
        regisTextField.setText("regisTextField ");

        labelFinalAnswer.setText("Is that your final answer?");

        finalNo.setText("finalNo");
        finalNo.setEnabled(false);
        finalNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finalNoMouseClicked(evt);
            }
        });

        finalYes.setText("finalYes");
        finalYes.setEnabled(false);
        finalYes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finalYesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lifePhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(life5050, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lifeAsk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(walkAway, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(regisTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(questionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(answerA, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(answerC, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addComponent(labelFinalAnswer))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(50, 50, 50)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(finalYes)
                                        .addComponent(finalNo))))
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(answerB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(answerD, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)))))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(regisTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lifePhone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(life5050, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lifeAsk, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(150, 150, 150)
                                        .addComponent(answerA, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(answerC, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(answerD, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(walkAway, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(questionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(answerB, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelFinalAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(finalYes, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(finalNo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void answerAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_answerAMouseClicked
        playerResponse = "A";
        EnableFinalAnswerButtons(true);
        EnableAnswerButtons(false);
        answerA.setEnabled(true);
    }//GEN-LAST:event_answerAMouseClicked

    private void answerBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_answerBMouseClicked
        playerResponse = "B";
        EnableFinalAnswerButtons(true);
        EnableAnswerButtons(false);
        answerB.setEnabled(true);
    }//GEN-LAST:event_answerBMouseClicked

    private void answerCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_answerCMouseClicked
        playerResponse = "C";
        EnableFinalAnswerButtons(true);
        EnableAnswerButtons(false);
        answerC.setEnabled(true);
    }//GEN-LAST:event_answerCMouseClicked

    private void answerDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_answerDMouseClicked
        playerResponse = "D";
        EnableFinalAnswerButtons(true);
        EnableAnswerButtons(false);
        answerD.setEnabled(true);
    }//GEN-LAST:event_answerDMouseClicked

    private void finalYesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalYesMouseClicked
        EnableFinalAnswerButtons(false);
        CheckPlayerAnswer(playerResponse);
    }//GEN-LAST:event_finalYesMouseClicked

    private void finalNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalNoMouseClicked
        EnableFinalAnswerButtons(false);
        EnableAnswerButtons(true);
        ReadNo();
    }//GEN-LAST:event_finalNoMouseClicked

    private void lifePhoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lifePhoneMouseClicked
        UseLifelineCallAFriend();
    }//GEN-LAST:event_lifePhoneMouseClicked

    private void life5050MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_life5050MouseClicked
        UseLifeline5050();
    }//GEN-LAST:event_life5050MouseClicked

    private void lifeAskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lifeAskMouseClicked
        UseLifelineAskTheAudience();
    }//GEN-LAST:event_lifeAskMouseClicked

    private void walkAwayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkAwayMouseClicked
        WalkAway();
    }//GEN-LAST:event_walkAwayMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);                
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton answerA;
    private javax.swing.JButton answerB;
    private javax.swing.JButton answerC;
    private javax.swing.JButton answerD;
    private javax.swing.JButton finalNo;
    private javax.swing.JButton finalYes;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel labelFinalAnswer;
    private javax.swing.JButton life5050;
    private javax.swing.JButton lifeAsk;
    private javax.swing.JButton lifePhone;
    private javax.swing.JTextField questionTextField;
    private javax.swing.JTextField regisTextField;
    private javax.swing.JButton walkAway;
    // End of variables declaration//GEN-END:variables

    
    // Set enabled for final answer buttons
    public void EnableFinalAnswerButtons(boolean en)
    {
        //labelFinalAnswer.setVisible(en);
        
        //finalYes.setVisible(en);
        //finalNo.setVisible(en);
        
        finalYes.setEnabled(en);
        finalNo.setEnabled(en);
    }
    
    // Set enabled for answer buttons
    public void EnableAnswerButtons(boolean en)
    {
        answerA.setEnabled(en);
        answerB.setEnabled(en);
        answerC.setEnabled(en);
        answerD.setEnabled(en);
    }
    
    // Set enabled for lifeline and walk away buttons
    public void EnableOptions(boolean en)
    {
        lifePhone.setEnabled(en);
        lifeAsk.setEnabled(en);
        life5050.setEnabled(en);
        walkAway.setEnabled(en);
    }
    
    @Override
    // Generate subset of easy, medium and hard questions
    public void GenerateQuestionPool() {
        qList.GenerateCurrentGameSubset(5, 5, 5);   // Easy, Medium, Hard questions
    }

    @Override
    // Output an intro from Regis to the chosen output
    public void ReadIntro() {
        regisTextField.setText(regis.readIntro());
    }

    @Override
    // Run main gameplay loop
    public void GameLoop() {
        
        if (state.isGameOver() == false)
        {
            AskQuestion();
        }
        else
        {
            ReadOutro();
            
            // Clear question and answers
            questionTextField.setText("");
            answerA.setText("Answer A");
            answerB.setText("Answer B");
            answerC.setText("Answer C");
            answerD.setText("Answer D");
        
            // Disable all buttons
            EnableOptions(false);        
            EnableAnswerButtons(false);
            EnableFinalAnswerButtons(false);
            
            ExportGameLog();
        }
    }

    @Override
    // Ask the player the next question
    public void AskQuestion() {
        question = qList.GetNextQuestion(state.getQuestionNum());
        questionTextField.setText(regis.readQuestion(state.getQuestionNum(), state.getNextWinnings(), question));
        
        // Write answers to buttons
        answerA.setText(question.getAnswerA());
        answerB.setText(question.getAnswerB());
        answerC.setText(question.getAnswerC());
        answerD.setText(question.getAnswerD());
        
        // Make answer buttons clickable
        EnableAnswerButtons(true);
        EnableFinalAnswerButtons(false);
    }

    @Override
    // Get a response from the player, and check if it is correct
    public void CheckPlayerAnswer(String input) {
        if (question.IsCorrect(input))
        {
            // Advance to next question if answer is correct
            state.incrementQuestion();
            regisTextField.setText(regis.readCorrect(state.getCurrentWinnings(), state.getBankedWinnings()));
        }
        else
        {
            // End the game if an incorrect answer is given
            state.setGameOver();
            regisTextField.setText(regis.readIncorrect(state.getCurrentWinnings(), question));
        }
        
        // Loop back and run again
        GameLoop();
    }

    @Override
    // Output a response from Regis if the player chooses to retract their final answer
    public void ReadNo() {
        regisTextField.setText(regis.readNo());
    }

    @Override
    // Use a lifeline for the current question
    public void UseLifelineCallAFriend() {
        regisTextField.setText(lifelineCallAFriend.UseLifeline(question));
        lifePhone.setEnabled(false);
    }

    @Override
    // Use a lifeline for the current question
    public void UseLifelineAskTheAudience() {
        regisTextField.setText(lifelineAskTheAudience.UseLifeline(question));
        lifeAsk.setEnabled(false);
    }

    @Override
    // Use a lifeline for the current question
    public void UseLifeline5050() {
        regisTextField.setText(lifelineFiftyFifty.UseLifeline(question));
        life5050.setEnabled(false);
    }

    @Override
    // End the game by walking away or exiting to menu
    public void WalkAway() {
        state.walkAway();

        GameLoop();
    }

    @Override
    // Output an outro and final winnings from Regis to the chosen output
    public void ReadOutro() {
        regisTextField.setText(regis.readOutro(state.getCurrentWinnings()));
    }

    @Override
    // Export a log of the last game to file
    public void ExportGameLog() {
        
    }
}
